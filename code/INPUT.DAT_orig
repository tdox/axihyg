hemisphere, rigid body                                                          
e                  :UNIT, "s" for SI, "e" for English
1                  :THEORY;  1,2,3,4,5,6,7,8
T                  :RIGID if TRUE, rigid body displacements included
2                  :TORORD; t/R order 0,1,or2
1 2 1              :OSHPU,OSHPW,OSHPD(integers);Order SHape function (U,W,D)
2                  :NINT (Number of INTegration points
T                  :KSHORT; if TRUE, quick alogorithm for stiffness
torp               :SHAPE(character*4); either CYLN, CONE, SPHR,PARB
  0.00000E+00  0.10000E+02  0.00000E+00  1.5708       :Rc,Rphi,Phi_top,Phi_bot
20                 :NUMEL(integer); number of elements
 1  0.00000E+00    :Node,X(Node)
21  1.5708         :Node,X(Node)
F                  :HOMOGN, if true material is homogeneous
T                  :SYM; if true laminate is symmetric
 3                 :Number of stacks
  1  1  1  0.11810E-01    0.0  :Stack No.,Material No.,NPLY,PTH,Theta
  2  1  1  0.11810E-01   75.0  :Stack No.,Material No.,NPLY,PTH,Theta
  3  1  1  0.11810E-01  -75.0  :Stack No.,Material No.,NPLY,PTH,Theta
F                  :FCODE; if .TRUE. mechanical load data follows
F                  :TCODE; if .TRUE. thermal data follows
F                  :MOIST; if .TRUE. moisture data follows
0                  :BCTYPE(1) 0:general 1:s.s 2:clamp 3:free 4:sym
 1 1  0.00000E+00  :BCCODE(1, 1), BC(1, 1):  u1     
 2 1  0.00000E+00  :BCCODE(1, 2), BC(1, 2):  u2     
 3 1  0.10000E+01  :BCCODE(1, 3), BC(1, 3):  w      
 4 1  0.00000E+00  :BCCODE(1, 4), BC(1, 4):  1 Beta1
 5 1  0.00000E+00  :BCCODE(1, 5), BC(1, 5):  1 Beta2
 6 2  0.00000E+00  :BCCODE(1, 6), BC(1, 6):  1 S1   
 7 2  0.00000E+00  :BCCODE(1, 7), BC(1, 7):  2 S1   
 8 1  0.00000E+00  :BCCODE(1, 8), BC(1, 8):  3 Beta1
 9 1  0.00000E+00  :BCCODE(1, 9), BC(1, 9):  3 Beta2
10 1  0.00000E+00  :BCCODE(1,10), BC(1,10):  2 Beta1
11 1  0.00000E+00  :BCCODE(1,11), BC(1,11):  2 Beta2
12 2  0.00000E+00  :BCCODE(1,12), BC(1,12):  3 S1   
3                  :BCTYPE(2) 0:general 1:s.s 2:clamp 3:free 4:sym
T                  :BACK; if true solve for displacements
T                  :ReSuLT; if true solve for resultants
F                  :PLoTSWitCh; if true plotting data files
out2.dat           :Output file name
